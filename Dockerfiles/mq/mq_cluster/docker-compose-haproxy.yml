version: '2'

services:
    rabbitmq-node-1:
        image: rabbitmq:3-management
        container_name: rabbitmq-node-1
        hostname: rabbitmq-node-1
        ports:
            - "15673:15672"
            - "5673:5672"
        networks: 
            - front-tier
            - back-tier
        volumes:
            - $PWD/storage/rabbitmq-node-1:/var/lib/rabbitmq
        environment:
            - RABBITMQ_NODE_TYPE=stats
            - RABBITMQ_NODE_NAME=rabbit@stats
            - RABBITMQ_ERLANG_COOKIE=cluster_cookie
            - RABBITMQ_DEFAULT_USER="admin"
            - RABBITMQ_DEFAULT_PASS="admin"
  
    rabbitmq-node-2:
        image: rabbitmq:3-management
        container_name: rabbitmq-node-2
        hostname: rabbitmq-node-2
        ports:
            - "15674:15672"
            - "5674:5672"
        networks: 
            - front-tier
            - back-tier
        volumes:
            - $PWD/storage/rabbitmq-node-2:/var/lib/rabbitmq
            - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
        # 通过脚本创建mq集群
        entrypoint: /usr/local/bin/cluster-entrypoint.sh


        environment:
            - RABBITMQ_NODE_TYPE=queue-disc
            - RABBITMQ_NODE_NAME=rabbit@queue-disc1
            - RABBITMQ_ERLANG_COOKIE=cluster_cookie
            - RABBITMQ_DEFAULT_USER="admin"
            - RABBITMQ_DEFAULT_PASS="admin"
      
    rabbitmq-node-3:
        image: rabbitmq:3-management
        container_name: rabbitmq-node-3
        hostname: rabbitmq-node-3
        ports:
            - "15675:15672"
            - "5675:5672"
        networks: 
              - front-tier
              - back-tier
        volumes:
            - $PWD/storage/rabbitmq-node-3:/var/lib/rabbitmq
            - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
        environment:
            - RABBITMQ_NODE_TYPE=queue-ram
            - RABBITMQ_NODE_NAME=rabbit@queue-ram1
            - RABBITMQ_ERLANG_COOKIE=cluster_cookie
            - RABBITMQ_DEFAULT_USER="admin"
            - RABBITMQ_DEFAULT_PASS="admin"
        entrypoint: /usr/local/bin/cluster-entrypoint.sh

    haproxy2:
      build: haproxy2
      depends_on:
        - rabbitmq-node-1
        - rabbitmq-node-2
        - rabbitmq-node-3

      networks:
        - front-tier
        - back-tier
      ports:
        - "5676:5672"  # mq
        - "1936:1936"  # haproxy status
        - "15676:15672" # mq_ui
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./haproxy2/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

    #haproxy:
        #build: haproxy
        ## container_name: haproxy
        #hostname: haproxy
        #expose:
            #- "5672"  # mq
            #- "1936"  # haproxy status
            #- "15672" # mq_ui
        ##ports:
            ##- "5677:5672"  # mq
            ##- "1937:1936"  # haproxy status
            ##- "15677:15672" # mq_ui
        #volumes:
            #- ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
            #- ./haproxy/docker-entrypoint-override.sh:/docker-entrypoint-override.sh
            #- ./haproxy/keepalived:/keepalived
        #depends_on:
          #- rabbitmq-node-1
          #- rabbitmq-node-2
          #- rabbitmq-node-3
        ## network_mode: host
        #networks: 
            #- front-tier
            #- back-tier
    #nginx:
        #restart: always
        #build: nginx
        #ports:
            #- "5677:5672"  # mq
            #- "1937:1936"  # haproxy status
            #- "15677:15672" # mq_ui
        #volumes:
            #- ./nginx/sites-enabled:/etc/nginx/sites-enabled
            #- ./nginx/log:/var/log/nginx
            #- ./nginx/www:/usr/share/nginx/html
            #- ./nginx/nginx.conf:/etc/nginx/nginx.conf
            #- ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            #- ./nginx/femn.pem:/etc/nginx/femn.pem
            #- ./nginx/femn_private.key:/etc/nginx/femn_private.key
            #- ./nginx/uwsgi.conf:/etc/nginx/sites-available/uwsgi.conf
            #- ./nginx/index.html:/usr/share/nginx/html/index.html
        #volumes_from:
            #- haproxy
        #depends_on:
            #- haproxy

        #logging:
          #driver: syslog #  当关闭nginx后台开启时,使用此driver会报错
          #options:
              #syslog-address: tcp://0.0.0.0:5000
              #tag: nginx


        #networks:
          #- front-tier
          #- back-tier


networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge
