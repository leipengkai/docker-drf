# the web client <-> the web server （ Nginx ） <-> unix socket <-> uWSGI <-> Django
# the upstream component nginx needs to connect to
upstream uwsgi {
	# server drf_web:8000; # drf_web:容器端口 use TCP
	server unix:/code/app.sock; # for a file socket    
}

# configuration of the server
server {
	# the port your site will be served on
	listen    80;
	# index  index.html;
	# the domain name it will serve for
	# substitute your machine's IP address or FQDN
	server_name  femn.com www.femn.com;
	charset     utf-8;

	client_max_body_size 75M;   # adjust to taste

	# Django media
	# location /media  {
	#     alias /code/static/media;  # your Django project's media files - amend as required
	# }

	location /static {
		alias /code/static; # your Django project's static files - amend as required
	}
	
	location / {
		uwsgi_pass  uwsgi;        
		include     /etc/nginx/uwsgi_params; # the uwsgi_params file you installed         
	}
    # return 301 https://www.femn.com$request_uri; # 不使用docker nginx的话,使用这名话,
    # 就可以替代listen 443中的server的 location了
}

server{

	listen  80;
	listen  443;
	server_name  femn.com;

	ssl on;
	ssl_certificate femn.pem;
	ssl_certificate_key femn_private.key;
	ssl_session_timeout 5m;
	ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;

	location /static {
		alias /code/static; # your Django project's static files - amend as required
	}

	location / {
		uwsgi_pass  uwsgi;
		include     /etc/nginx/uwsgi_params; # the uwsgi_params file you installed
	}
}